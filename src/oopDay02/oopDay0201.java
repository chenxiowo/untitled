package oopDay02;

import oopDay02.Student;

public class oopDay0201 {
    public static void main(String[] args) {
//        知识点1：=（赋值符号）的真正含义
//        对于基本数据类型而言，=（赋值符号）传递的是实实在在的值
//        对于类类型（引用类型）而言，=传递的是对象的地址
//
//        int x=9;
//        int y=x;//如果对y进行修改的话，x值不会发生改变
//        y+=10;
//        System.out.println("x:"+x);
//        System.out.println("y:"+y);
//        Student s1=new Student();
//        Student s2=s1;//如果通过引用s1修改对象的话，s2操作的对象也会改变
//
////        知识点2. ==（等于）的真正含义
////        对于基本数据类型而言，==比较的是数据
////        对于类型（引用类型）而言，==比较的是对象的地址
////              如果两个引用指向（操作）一个对象，返回（true）；如果两个引用分别指向不同的对象，返回false
//
//        int a=8;
//        int b=8;
//
//
//        Student stu1=new Student("1001","张三");
//        Student stu2=new Student("1001","张三");
//        System.out.println("stu1==stu2:"+(stu1==stu2));
//
//        Student stu3=stu1;
//        System.out.println("stu1==stu3:"+(stu1==stu3));
//
//        System.out.println(stu1.gerid());
//        知识点3：关键词this
//        3.1什么是this？
//           this代表当前对象

//        3.2this的作用（3个）
//        a.在方法里，通过this明确调用全局变量，解决和局部变量命名冲突的问题
//        b.在构造方法的第一行。通过this（）调用本类的其他的构造方法
//        c.在实例/成员方法里，通过this，方法名（）调用其他的实例/成员方法
//
//        3.3使用this调用类的构造方法，应注意三点：
//        1.只能在构造方法中使用this（）调用其他的构造方法，不能在成员方法中使用
//        2.在构造方法中，使用this（）调用其他的构造方法必须位于构造方法的第一行，并且只能出现一次
//        3.不能在一个类的两个构造方法中使用this互相调用

//        知识点4：全局变量和局部变量的区别
//        区别：
//              a.位置不同
//                  成员变量：类中 方法外
//                  局部变量：方法中定义
//              b.在内存中的位置不同
//                  成员变量：在堆中
//                  局部变量：在栈中
//              c.生命周期不同
//                  成员变量：随着对象的创建而存在，随着对象的消失而消失
//                  局部变量：随着方法的调用存在，随着方法调用完毕消失
//              d.初始值不同
//                  成员变量：有默认值
//                  局部变量：没有默认值，必须定义，赋值，然后才能使用
//              e.优先值不同
//                  两类变量同名时，优先使用局部变量

//        知识点5：Java命名规范
//        5.1标识符由字母：下划线“_”，美元符号“$”或数字组成
//        5.2标识符应以字母，下划线，美元符号开头，不能以字母开头
//        5.3标识符大小写敏感，长度无限制
//        5.4标识符不能是Java关键字
//        5.5变量名，方法首字母小写，采用驼峰命名法
//        5.6类名首字母大写
//        5.7常量名全部大写


    }
}
